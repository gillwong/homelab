---
# Reference: https://longhorn.io/docs/1.8.0/deploy/install/#installing-open-iscsi
- name: Install & configure Open-iSCSI
  block:
    - name: Obtain installed iscsiadm CLI version
      ansible.builtin.command: iscsiadm --version
      register: iscsiadm_version_output
      changed_when: false
      ignore_errors: true

    - name: Install iscsi-initiator-utils
      when: not ansible_check_mode and iscsiadm_version_output.rc != 0
      ansible.builtin.command:
        argv:
          - dnf
          - --setopt=tsflags=noscripts
          - --assumeyes
          - install
          - iscsi-initiator-utils
      changed_when: true

    - name: Configure iSCSI
      block:
        - name: Get the iSCSI InitiatorName using iscsi-iname
          ansible.builtin.command: /sbin/iscsi-iname
          register: iscsi_iname_output
          changed_when: false

        - name: Write the InitiatorName to /etc/iscsi/initiatorname.iscsi
          ansible.builtin.lineinfile:
            path: /etc/iscsi/initiatorname.iscsi
            regexp: ^InitiatorName=
            line: InitiatorName={{ iscsi_iname_output.stdout }}
            state: present
            create: true
            mode: "644"

- name: Start and enable iscsid service
  ansible.builtin.service:
    name: iscsid
    state: started
    enabled: true
  become: true

# Reference: https://longhorn.io/docs/1.8.0/deploy/install/#installing-nfsv4-client
- name: Check kernel support for NFSv4
  block:
    - name: Obtain kernel release
      ansible.builtin.command: uname -r
      register: kernel_release_output
      changed_when: false

    - name: Check kernel support for NFSv4.2
      ansible.builtin.lineinfile:
        name: /boot/config-{{ kernel_release_output.stdout }}
        regexp: ^CONFIG_NFS_V4_2=y
        state: absent
      check_mode: true
      register: nfsv42_check_output
      failed_when: not nfsv42_check_output.changed
  rescue:
    - name: Check kernel support for NFSv4.1
      ansible.builtin.lineinfile:
        name: /boot/config-{{ kernel_release_output.stdout }}
        regexp: ^CONFIG_NFS_V4_1=y
        state: absent
      check_mode: true
      register: nfsv41_check_output
      failed_when: not nfsv41_check_output.changed

- name: Install a NFSv4 client
  ansible.builtin.dnf:
    name: nfs-utils
    state: present

- name: Check if firewalld exists
  changed_when: false
  ansible.builtin.command: firewall-cmd --version
  register: firewalld_version_output
  ignore_errors: true

# Reference: https://github.com/longhorn/longhorn/issues/8293#issuecomment-2033284076
- name: Allow masquerading with firewalld
  when: firewalld_version_output.rc == 0
  ansible.posix.firewalld:
    masquerade: true
    state: enabled
    permanent: true
