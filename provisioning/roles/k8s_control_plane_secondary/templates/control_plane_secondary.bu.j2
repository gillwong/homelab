variant: flatcar
version: 1.0.0
passwd:
  users:
    - name: core
      ssh_authorized_keys: {{ k8s_control_plane_secondary_ign_ssh_authorized_keys }}
storage:
  files:
    - path: /etc/hostname
      contents:
        inline: {{ k8s_control_plane_secondary_name }}
    - path: /etc/sysctl.d/ipfwd.conf
      contents:
        inline: net.ipv4.ip_forward=1
    - path: /etc/sysctl.d/increaseusers.conf
      contents:
        inline: fs.inotify.max_user_instances=1500
    - path: /opt/bin/kubectl
      mode: 0755
      contents:
        source: {{ k8s_control_plane_secondary_k8s_common_base_url }}/kubectl
    - path: /opt/bin/kubeadm
      mode: 0755
      contents:
        source: {{ k8s_control_plane_secondary_k8s_common_base_url }}/kubeadm
    - path: /opt/bin/kubelet
      mode: 0755
      contents:
        source: {{ k8s_control_plane_secondary_k8s_common_base_url }}/kubelet
    - path: /etc/systemd/network/00-eth0.network
      contents:
        inline: |
          [Match]
          Name=eth0

          [Network]
          DNS=192.168.0.1
          Address={{ k8s_control_plane_secondary_ip }}/16
          Gateway=192.168.0.1
    - path: /etc/systemd/system/kubelet.service
      contents:
        source: {{ k8s_control_plane_secondary_k8s_misc_base_url }}/kubelet/kubelet.service
    - path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      contents:
        source: {{ k8s_control_plane_secondary_k8s_misc_base_url }}/kubeadm/10-kubeadm.conf
    - path: /etc/kubeadm_join.yaml
      contents:
        inline: |
          apiVersion: kubeadm.k8s.io/v1beta4
          kind: JoinConfiguration
          discovery:
            bootstrapToken:
              apiServerEndpoint: {{ k8s_control_plane_secondary_k8s_cluster_endpoint }}:6443
              token: {{ k8s_control_plane_secondary_join_command.split()[4] }}
              caCertHashes:
                - {{ k8s_control_plane_secondary_join_command.split()[6] }}
          controlPlane:
            localAPIEndpoint:
              advertiseAddress: {{ k8s_control_plane_secondary_ip }}
              bindPort: 6443
            certificateKey: {{ k8s_control_plane_secondary_cert_key }}
    - path: /etc/kubernetes/manifests/kube-vip.yaml
      contents:
        inline: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: kube-vip
            namespace: kube-system
          spec:
            containers:
            - args:
              - manager
              env:
              - name: vip_arp
                value: "true"
              - name: port
                value: "6443"
              - name: vip_nodename
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: vip_interface
                value: eth0
              - name: vip_cidr
                value: "32"
              - name: dns_mode
                value: first
              - name: cp_enable
                value: "true"
              - name: cp_namespace
                value: kube-system
              - name: svc_enable
                value: "true"
              - name: lb_enable
                value: "true"
              - name: svc_leasename
                value: plndr-svcs-lock
              - name: vip_leaderelection
                value: "true"
              - name: vip_leasename
                value: plndr-cp-lock
              - name: vip_leaseduration
                value: "5"
              - name: vip_renewdeadline
                value: "3"
              - name: vip_retryperiod
                value: "1"
              - name: address
                value: {{ k8s_control_plane_secondary_k8s_cluster_endpoint }}
              - name: prometheus_server
                value: :2112
              image: ghcr.io/kube-vip/kube-vip:v0.8.9
              imagePullPolicy: IfNotPresent
              name: kube-vip
              resources: {}
              securityContext:
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
              volumeMounts:
              - mountPath: /etc/kubernetes/admin.conf
                name: kubeconfig
            hostAliases:
            - hostnames:
              - kubernetes
              ip: 127.0.0.1
            hostNetwork: true
            volumes:
            - hostPath:
                path: /etc/kubernetes/admin.conf
              name: kubeconfig
systemd:
  units:
    - name: kubelet.service
      enabled: true
      dropins:
        - name: 20-kubelet.conf
          contents: |
            [Service]
            ExecStart=
            ExecStart=/opt/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
    - name: kubeadm.service
      enabled: true
      contents: |
        [Unit]
        Description=Kubeadm service
        Requires=containerd.service
        After=containerd.service
        ConditionPathExists=!/etc/kubernetes/kubelet.conf
        [Service]
        Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/bin"
        ExecStartPre=/opt/bin/kubeadm config images pull
        ExecStartPre=/opt/bin/kubeadm join --config /etc/kubeadm_join.yaml
        ExecStartPre=/usr/bin/mkdir /home/core/.kube
        ExecStartPre=/usr/bin/cp /etc/kubernetes/admin.conf /home/core/.kube/config
        ExecStart=/usr/bin/chown -R core:core /home/core/.kube
        TimeoutSec=600
        [Install]
        WantedBy=multi-user.target